/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RPSOnline, RPSOnlineInterface } from "../RPSOnline";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "opponent",
        type: "address",
      },
    ],
    name: "MatchCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "MatchResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "MoveCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum RPSOnline.Move",
        name: "move",
        type: "uint8",
      },
    ],
    name: "MoveRevealed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "opponent",
        type: "address",
      },
    ],
    name: "createMatch",
    outputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "address",
        name: "player1",
        type: "address",
      },
      {
        internalType: "address",
        name: "player2",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commit1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "commit2",
        type: "bytes32",
      },
      {
        internalType: "enum RPSOnline.Move",
        name: "move1",
        type: "uint8",
      },
      {
        internalType: "enum RPSOnline.Move",
        name: "move2",
        type: "uint8",
      },
      {
        internalType: "enum RPSOnline.Phase",
        name: "phase",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextMatchId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "enum RPSOnline.Move",
        name: "move",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "revealMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115de806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806326826f621461005c5780634768d4ef14610078578063583262ab146100af57806372722f67146100df578063c5adf7c9146100fb575b600080fd5b61007660048036038101906100719190610e7e565b610119565b005b610092600480360381019061008d9190610ebe565b61042f565b6040516100a6989796959493929190610ffa565b60405180910390f35b6100c960048036038101906100c491906110a4565b6104fe565b6040516100d691906110e0565b60405180910390f35b6100f960048036038101906100f49190611120565b610643565b005b610103610ca4565b60405161011091906110e0565b60405180910390f35b60006001600084815260200190815260200160002090506000600281111561014457610143610f3b565b5b8160040160029054906101000a900460ff16600281111561016857610167610f3b565b5b146101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019f906111d0565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061025557508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028b9061123c565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610342576000801b816002015414610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b906112a8565b60405180910390fd5b818160020181905550610395565b6000801b81600301541461038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906112a8565b60405180910390fd5b8181600301819055505b3373ffffffffffffffffffffffffffffffffffffffff16837f1d3cf81927da212fdd71794079b5b6a4915c8e82ae6486396a4a635d7b641d7260405160405180910390a36000801b8160020154141580156103f757506000801b816003015414155b1561042a5760018160040160026101000a81548160ff0219169083600281111561042457610423610f3b565b5b02179055505b505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16908060040160029054906101000a900460ff16908060040160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b6000806000815480929190610512906112f7565b9190505590506000600160008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160040160026101000a81548160ff021916908360028111156105dd576105dc610f3b565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16837fe08af3491ff5da4a802782054d74abe364c01b6983872e2e93e728330b03a45060405160405180910390a450919050565b60006001600085815260200190815260200160002090506001600281111561066e5761066d610f3b565b5b8160040160029054906101000a900460ff16600281111561069257610691610f3b565b5b146106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c99061138b565b60405180910390fd5b600160038111156106e6576106e5610f3b565b5b8360038111156106f9576106f8610f3b565b5b148061072957506002600381111561071457610713610f3b565b5b83600381111561072757610726610f3b565b5b145b80610757575060038081111561074257610741610f3b565b5b83600381111561075557610754610f3b565b5b145b610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078d906113f7565b60405180910390fd5b600083836040516020016107ab92919061146e565b6040516020818303038152906040528051906020012090508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610909576000600381111561082e5761082d610f3b565b5b8260040160009054906101000a900460ff16600381111561085257610851610f3b565b5b14610892576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610889906114e6565b60405180910390fd5b816002015481146108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90611552565b60405180910390fd5b838260040160006101000a81548160ff021916908360038111156108ff576108fe610f3b565b5b0217905550610a8b565b8160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610a4f576000600381111561097457610973610f3b565b5b8260040160019054906101000a900460ff16600381111561099857610997610f3b565b5b146109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf906114e6565b60405180910390fd5b81600301548114610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590611552565b60405180910390fd5b838260040160016101000a81548160ff02191690836003811115610a4557610a44610f3b565b5b0217905550610a8a565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a819061123c565b60405180910390fd5b5b3373ffffffffffffffffffffffffffffffffffffffff16857fdd17665bf97c2a169e97f4f62f36023bf40807eb797a922864394a910d5c37c886604051610ad29190611572565b60405180910390a360006003811115610aee57610aed610f3b565b5b8260040160009054906101000a900460ff166003811115610b1257610b11610f3b565b5b14158015610b56575060006003811115610b2f57610b2e610f3b565b5b8260040160019054906101000a900460ff166003811115610b5357610b52610f3b565b5b14155b15610c9d5760028260040160026101000a81548160ff02191690836002811115610b8357610b82610f3b565b5b0217905550610bfe8260040160009054906101000a900460ff168360040160019054906101000a900460ff168460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610caa565b8260040160036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550847f4b4cd3c4d64a3d15a94b7688d423fbb3ed8e87e2a1dbac4f147b4a5efb1360528360040160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610c94919061158d565b60405180910390a25b5050505050565b60005481565b6000836003811115610cbf57610cbe610f3b565b5b856003811115610cd257610cd1610f3b565b5b03610ce05760009050610e05565b60016003811115610cf457610cf3610f3b565b5b856003811115610d0757610d06610f3b565b5b148015610d375750600380811115610d2257610d21610f3b565b5b846003811115610d3557610d34610f3b565b5b145b80610d96575060026003811115610d5157610d50610f3b565b5b856003811115610d6457610d63610f3b565b5b148015610d95575060016003811115610d8057610d7f610f3b565b5b846003811115610d9357610d92610f3b565b5b145b5b80610df45750600380811115610daf57610dae610f3b565b5b856003811115610dc257610dc1610f3b565b5b148015610df3575060026003811115610dde57610ddd610f3b565b5b846003811115610df157610df0610f3b565b5b145b5b15610e0157829050610e05565b8190505b949350505050565b600080fd5b6000819050919050565b610e2581610e12565b8114610e3057600080fd5b50565b600081359050610e4281610e1c565b92915050565b6000819050919050565b610e5b81610e48565b8114610e6657600080fd5b50565b600081359050610e7881610e52565b92915050565b60008060408385031215610e9557610e94610e0d565b5b6000610ea385828601610e33565b9250506020610eb485828601610e69565b9150509250929050565b600060208284031215610ed457610ed3610e0d565b5b6000610ee284828501610e33565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1682610eeb565b9050919050565b610f2681610f0b565b82525050565b610f3581610e48565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610f7b57610f7a610f3b565b5b50565b6000819050610f8c82610f6a565b919050565b6000610f9c82610f7e565b9050919050565b610fac81610f91565b82525050565b60038110610fc357610fc2610f3b565b5b50565b6000819050610fd482610fb2565b919050565b6000610fe482610fc6565b9050919050565b610ff481610fd9565b82525050565b600061010082019050611010600083018b610f1d565b61101d602083018a610f1d565b61102a6040830189610f2c565b6110376060830188610f2c565b6110446080830187610fa3565b61105160a0830186610fa3565b61105e60c0830185610feb565b61106b60e0830184610f1d565b9998505050505050505050565b61108181610f0b565b811461108c57600080fd5b50565b60008135905061109e81611078565b92915050565b6000602082840312156110ba576110b9610e0d565b5b60006110c88482850161108f565b91505092915050565b6110da81610e12565b82525050565b60006020820190506110f560008301846110d1565b92915050565b6004811061110857600080fd5b50565b60008135905061111a816110fb565b92915050565b60008060006060848603121561113957611138610e0d565b5b600061114786828701610e33565b93505060206111588682870161110b565b925050604061116986828701610e69565b9150509250925092565b600082825260208201905092915050565b7f4e6f7420636f6d6d697420706861736500000000000000000000000000000000600082015250565b60006111ba601083611173565b91506111c582611184565b602082019050919050565b600060208201905081810360008301526111e9816111ad565b9050919050565b7f4e6f74206120706c617965720000000000000000000000000000000000000000600082015250565b6000611226600c83611173565b9150611231826111f0565b602082019050919050565b6000602082019050818103600083015261125581611219565b9050919050565b7f416c726561647920636f6d6d6974746564000000000000000000000000000000600082015250565b6000611292601183611173565b915061129d8261125c565b602082019050919050565b600060208201905081810360008301526112c181611285565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061130282610e12565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611334576113336112c8565b5b600182019050919050565b7f4e6f742072657665616c20706861736500000000000000000000000000000000600082015250565b6000611375601083611173565b91506113808261133f565b602082019050919050565b600060208201905081810360008301526113a481611368565b9050919050565b7f496e76616c6964206d6f76650000000000000000000000000000000000000000600082015250565b60006113e1600c83611173565b91506113ec826113ab565b602082019050919050565b60006020820190508181036000830152611410816113d4565b9050919050565b60008160f81b9050919050565b600061142f82611417565b9050919050565b61144761144282610f91565b611424565b82525050565b6000819050919050565b61146861146382610e48565b61144d565b82525050565b600061147a8285611436565b60018201915061148a8284611457565b6020820191508190509392505050565b7f416c72656164792072657665616c656400000000000000000000000000000000600082015250565b60006114d0601083611173565b91506114db8261149a565b602082019050919050565b600060208201905081810360008301526114ff816114c3565b9050919050565b7f496e76616c69642072657665616c000000000000000000000000000000000000600082015250565b600061153c600e83611173565b915061154782611506565b602082019050919050565b6000602082019050818103600083015261156b8161152f565b9050919050565b60006020820190506115876000830184610fa3565b92915050565b60006020820190506115a26000830184610f1d565b9291505056fea264697066735822122081576bac802b963a7b1f4cc1ebc3334b8488180c178bd69dbb39762b479b823064736f6c63430008140033";

type RPSOnlineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RPSOnlineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RPSOnline__factory extends ContractFactory {
  constructor(...args: RPSOnlineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RPSOnline & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RPSOnline__factory {
    return super.connect(runner) as RPSOnline__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RPSOnlineInterface {
    return new Interface(_abi) as RPSOnlineInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RPSOnline {
    return new Contract(address, _abi, runner) as unknown as RPSOnline;
  }
}
